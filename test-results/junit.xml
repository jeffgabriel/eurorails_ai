<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="17" failures="0" errors="0" time="2.226">
  <testsuite name="Socket.IO Lobby Integration" errors="0" failures="0" skipped="0" timestamp="2025-10-29T01:54:21" time="2.113" tests="7">
    <testcase classname="Socket.IO Lobby Integration Lobby Room Management should handle join-lobby event" name="Socket.IO Lobby Integration Lobby Room Management should handle join-lobby event" time="0.003">
    </testcase>
    <testcase classname="Socket.IO Lobby Integration Lobby Room Management should handle leave-lobby event" name="Socket.IO Lobby Integration Lobby Room Management should handle leave-lobby event" time="0.001">
    </testcase>
    <testcase classname="Socket.IO Lobby Integration Event Broadcasting should broadcast lobby-updated to all clients in room" name="Socket.IO Lobby Integration Event Broadcasting should broadcast lobby-updated to all clients in room" time="0.001">
    </testcase>
    <testcase classname="Socket.IO Lobby Integration Connection Lifecycle should handle client connect event" name="Socket.IO Lobby Integration Connection Lifecycle should handle client connect event" time="0.002">
    </testcase>
    <testcase classname="Socket.IO Lobby Integration Connection Lifecycle should handle client disconnect event" name="Socket.IO Lobby Integration Connection Lifecycle should handle client disconnect event" time="0.001">
    </testcase>
    <testcase classname="Socket.IO Lobby Integration Error Handling should handle socket errors gracefully" name="Socket.IO Lobby Integration Error Handling should handle socket errors gracefully" time="0.008">
    </testcase>
    <testcase classname="Socket.IO Lobby Integration Error Handling should handle uninitialized socket gracefully" name="Socket.IO Lobby Integration Error Handling should handle uninitialized socket gracefully" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="SocketService" errors="0" failures="0" skipped="0" timestamp="2025-10-29T01:54:24" time="0.06" tests="10">
    <testcase classname="SocketService initializeSocketIO should initialize Socket.IO server" name="SocketService initializeSocketIO should initialize Socket.IO server" time="0.002">
    </testcase>
    <testcase classname="SocketService initializeSocketIO should return same instance on subsequent calls" name="SocketService initializeSocketIO should return same instance on subsequent calls" time="0.001">
    </testcase>
    <testcase classname="SocketService initializeSocketIO should configure CORS correctly" name="SocketService initializeSocketIO should configure CORS correctly" time="0">
    </testcase>
    <testcase classname="SocketService emitToLobby should emit event to all clients in lobby room" name="SocketService emitToLobby should emit event to all clients in lobby room" time="0.001">
    </testcase>
    <testcase classname="SocketService emitToLobby should not throw when calling emitToLobby" name="SocketService emitToLobby should not throw when calling emitToLobby" time="0.001">
    </testcase>
    <testcase classname="SocketService emitLobbyUpdated should emit lobby updated event with player data" name="SocketService emitLobbyUpdated should emit lobby updated event with player data" time="0.001">
    </testcase>
    <testcase classname="SocketService emitLobbyUpdated should handle player-left action" name="SocketService emitLobbyUpdated should handle player-left action" time="0.001">
    </testcase>
    <testcase classname="SocketService Socket event handling should handle connection event" name="SocketService Socket event handling should handle connection event" time="0">
    </testcase>
    <testcase classname="SocketService getSocketIO should return socket instance once initialized (singleton)" name="SocketService getSocketIO should return socket instance once initialized (singleton)" time="0">
    </testcase>
    <testcase classname="SocketService getSocketIO should return same instance on subsequent calls" name="SocketService getSocketIO should return same instance on subsequent calls" time="0.001">
    </testcase>
  </testsuite>
</testsuites>